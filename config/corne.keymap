/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        m0: m0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(N0))>;
            label = "M0";
        };

        m1: m1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(NUMBER_1))>;
            label = "M1";
        };

        m2: m2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(NUMBER_2))>;
            label = "M2";
        };

        m3: m3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(NUMBER_3))>;
            label = "M3";
        };

        m4: m4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(LG(LEFT_ARROW)))>;
            label = "M4";
        };

        m5: m5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(LG(UP_ARROW)))>;
            label = "M5";
        };

        m6: m6 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(LG(RIGHT_ARROW)))>;
            label = "M6";
        };

        m7: m7 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LG(LEFT_ARROW))>;
            label = "M7";
        };

        m8: m8 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LG(RIGHT_ARROW))>;
            label = "M8";
        };

        m9: m9 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(LG(M)))>;
            label = "M9";
        };

        m10: m10 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(F10))>;
            label = "M10";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E         &kp R         &kp T    &kp Y  &kp U      &kp I      &kp O    &kp P          &kp BSPC
&kp TAB    &kp A  &kp S  &kp D         &kp F         &kp G    &kp H  &kp J      &kp K      &kp L    &kp BACKSLASH  &kp ENTER
&kp LSHFT  &kp Z  &kp X  &kp C         &kp V         &kp B    &kp N  &kp M      &kp COMMA  &kp DOT  &kp FSLH       &kp RIGHT_SHIFT
                         &kp LEFT_ALT  &kp LEFT_GUI  &mo 1    &mo 2  &kp SPACE  &kp RCTRL
            >;
        };

        layer_1 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&m10          &m0             &m1  &m2           &m3           &kp C_VOLUME_UP      &kp RA(N8)  &kp LS(N8)        &kp RA(N7)         &kp LS(N9)       &kp RA(N9)        &kp DELETE
&kp CAPSLOCK  &kp C_PREVIOUS  &m4  &m5           &m6           &kp C_PLAY_PAUSE     &kp RA(N5)  &kp LS(NUMBER_2)  &kp LS(N0)         &kp EQUAL        &kp RA(NUMBER_6)  &none
&kp LSHFT     &kp C_NEXT      &m7  &m8           &m9           &kp C_VOLUME_DOWN    &kp LS(N5)  &kp LS(NUMBER_1)  &kp LS(MINUS)      &kp KP_MULTIPLY  &kp KP_PLUS       &kp RIGHT_SHIFT
                                   &kp LEFT_ALT  &kp LEFT_GUI  &none                &none       &kp SPACE         &kp RIGHT_CONTROL
            >;
        };

        layer_2 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none      &none      &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3  &kp N0       &kp RA(N)         &kp RA(E)         &kp RA(L)       &kp MINUS   &kp LEFT_BRACKET  &kp BSPC
&none      &none      &kp NUMBER_4  &kp NUMBER_5   &kp NUMBER_6  &none        &kp LEFT          &kp DOWN          &kp UP          &kp RIGHT   &kp SEMI          &none
&kp LSHFT  &kp GRAVE  &kp NUMBER_7  &kp NUMBER_8   &kp NUMBER_9  &none        &kp LS(NUMBER_4)  &kp LS(NUMBER_6)  &kp LS(RA(N7))  &kp LS(N7)  &kp SINGLE_QUOTE  &kp RIGHT_SHIFT
                                    &kp RIGHT_ALT  &kp LEFT_GUI  &kp LCTRL    &none             &kp SPACE         &none
            >;
        };
    };
};
